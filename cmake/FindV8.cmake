INCLUDE(FindPackageHandleStandardArgs)

IF (V8_STATIC)
  FIND_LIBRARY(V8_BASE libv8_base.a PATH_SUFFIXES obj.target/src)
  FIND_LIBRARY(V8_LIBBASE libv8_libbase.a PATH_SUFFIXES obj.target/src)
  FIND_LIBRARY(V8_LIBSNAPSHOT libv8_external_snapshot.a PATH_SUFFIXES obj.target/src)
  FIND_LIBRARY(V8_LIBSAMPLER libv8_libsampler.a PATH_SUFFIXES obj.target/src)
  FIND_LIBRARY(V8_LIBPLATFORM libv8_libplatform.a PATH_SUFFIXES obj.target/src)
  FIND_LIBRARY(V8_LIBICUI18N libicui18n.a PATH_SUFFIXES obj.target/third_party/icu)
  FIND_LIBRARY(V8_LIBICUUC libicuuc.a PATH_SUFFIXES obj.target/third_party/icu)
ELSE()
  FIND_LIBRARY(V8_BASE v8)
  FIND_LIBRARY(V8_LIBPLATFORM v8_libplatform)
ENDIF()

FIND_PATH(V8_INCLUDE_DIR NAMES v8.h)
FIND_PATH(V8_PLATFORM_INCLUDE_DIR NAMES libplatform.h PATH_SUFFIXES libplatform)

IF (V8_INCLUDE_DIR AND EXISTS "${V8_INCLUDE_DIR}/v8-version.h")
  FILE(STRINGS "${V8_INCLUDE_DIR}/v8-version.h" _VERS_H REGEX "#define V8_MAJOR_VERSION +[0-9]+")
  STRING(REGEX REPLACE ".* ([0-9]+).*" "\\1" _MAJOR_VERSION "${_VERS_H}")

  FILE(STRINGS "${V8_INCLUDE_DIR}/v8-version.h" _VERS_H REGEX "#define V8_MINOR_VERSION +[0-9]+")
  STRING(REGEX REPLACE ".* ([0-9]+).*" "\\1" _MINOR_VERSION "${_VERS_H}")

  FILE(STRINGS "${V8_INCLUDE_DIR}/v8-version.h" _VERS_H REGEX "#define V8_BUILD_NUMBER +[0-9]+")
  STRING(REGEX REPLACE ".* ([0-9]+).*" "\\1" _BUILD_NUMBER "${_VERS_H}")

  SET(V8_VERSION "${_MAJOR_VERSION}.${_MINOR_VERSION}.${_BUILD_NUMBER}")
ENDIF()

IF (V8_STATIC)
  IF (NOT V8_BLOB_DIR)
    MESSAGE(SEND_ERROR "Please set V8_BLOB_DIR to the run-time directory where"
      " the V8 files natives_blob.bin and snapshot_blob.bin will be installed")
  ENDIF()
  IF (NOT V8_ICU_DIR)
    MESSAGE(SEND_ERROR "Please set V8_ICU_DIR to the run-time directory where"
      " the V8 file icudtl.dat will be installed")
  ENDIF()
  IF (NOT V8_BLOB_DIR OR NOT V8_ICU_DIR)
    MESSAGE(FATAL_ERROR "One or more required run-time directories not specified")
  ENDIF()

  FIND_PACKAGE_HANDLE_STANDARD_ARGS(V8
    REQUIRED_VARS V8_INCLUDE_DIR V8_PLATFORM_INCLUDE_DIR
    V8_BASE V8_LIBBASE V8_LIBSNAPSHOT V8_LIBSAMPLER V8_LIBPLATFORM
    V8_LIBICUI18N V8_LIBICUUC
    VERSION_VAR V8_VERSION
    )
ELSE()
  FIND_PACKAGE_HANDLE_STANDARD_ARGS(V8
    REQUIRED_VARS V8_INCLUDE_DIR V8_PLATFORM_INCLUDE_DIR
    V8_BASE V8_LIBPLATFORM
    VERSION_VAR V8_VERSION
    )
ENDIF()

IF (V8_FOUND)
  IF (V8_STATIC)
    LIST(APPEND _V8_DEFINES "V8_BLOB_DIR=\"${V8_BLOB_DIR}/\"")
    LIST(APPEND _V8_DEFINES "V8_ICU_DIR=\"${V8_ICU_DIR}/\"")

    IF (NOT APPLE)
      LIST(APPEND _V8_LIBS "-Wl,--start-group")
    ENDIF()
    LIST(APPEND _V8_LIBS "${V8_BASE}")
    LIST(APPEND _V8_LIBS "${V8_LIBBASE}")
    LIST(APPEND _V8_LIBS "${V8_LIBSNAPSHOT}")
    LIST(APPEND _V8_LIBS "${V8_LIBSAMPLER}")
    LIST(APPEND _V8_LIBS "${V8_LIBPLATFORM}")
    IF (NOT APPLE)
      LIST(APPEND _V8_LIBS "-Wl,--end-group")
    ENDIF()
    LIST(APPEND _V8_LIBS "${V8_LIBICUI18N}")
    LIST(APPEND _V8_LIBS "${V8_LIBICUUC}")
  ELSE()
    LIST(APPEND _V8_LIBS "${V8_BASE}")
    LIST(APPEND _V8_LIBS "${V8_LIBPLATFORM}")
  ENDIF()

  LIST(APPEND _V8_INCLUDES "${V8_INCLUDE_DIR}")
  LIST(APPEND _V8_INCLUDES "${V8_PLATFORM_INCLUDE_DIR}")

  ADD_LIBRARY(l::V8 INTERFACE IMPORTED)
  SET_TARGET_PROPERTIES(l::V8 PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${_V8_INCLUDES}"
    INTERFACE_LINK_LIBRARIES "${_V8_LIBS}"
    INTERFACE_COMPILE_DEFINITIONS "${_V8_DEFINES}"
  )
ENDIF()
