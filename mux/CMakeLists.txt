# Copyright Â© 2018 TermySequence LLC
#
# SPDX-License-Identifier: GPL-2.0-only

IF (USE_LIBGIT2)
  FIND_PACKAGE(Libgit2 0.26.0 REQUIRED)
ENDIF()

FILE(GLOB server_SOURCES app/*.cpp base/*.cpp xterm/*.cpp)
FILE(GLOB server_TR_TXT i18n/*.txt)

IF (USE_SYSTEMD)
  LIST(APPEND server_SOURCES systemd/scoper.cpp)
ENDIF()

ADD_EXECUTABLE(${SERVER_NAME} ${server_SOURCES})
LTO_EXECUTABLE(${SERVER_NAME})
TARGET_INCLUDE_DIRECTORIES(${SERVER_NAME} BEFORE PRIVATE .)
TARGET_LINK_LIBRARIES(${SERVER_NAME} os common Threads::Threads)
IF (USE_SYSTEMD)
  TARGET_LINK_LIBRARIES(${SERVER_NAME} l::Systemd)
ENDIF()

INSTALL(TARGETS ${SERVER_NAME} DESTINATION bin)
INSTALL(CODE "EXECUTE_PROCESS(COMMAND ln -sf ${SERVER_NAME} ${CONNECT_NAME}
              WORKING_DIRECTORY \$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/bin)")
INSTALL(CODE "EXECUTE_PROCESS(COMMAND ln -sf ${SERVER_NAME} ${QUERY_NAME}
              WORKING_DIRECTORY \$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/bin)")
INSTALL(FILES ${server_TR_TXT}
  DESTINATION ${CMAKE_INSTALL_DATADIR}/${SERVER_NAME}/i18n)

FUNCTION(DEFUNIT source dest)
  CONFIGURE_FILE(unit/${source}.in ${dest} @ONLY)
  INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/${dest} DESTINATION lib/systemd/user)
ENDFUNCTION()
IF (USE_SYSTEMD)
  DEFUNIT(unit.socket ${SERVER_NAME}.socket)
  DEFUNIT(unit.service ${SERVER_NAME}.service)
ENDIF()

FUNCTION(DEFSCRIPT source dest)
  CONFIGURE_FILE(scripts/${source}.sh.in ${dest} @ONLY)
  INSTALL(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${dest} DESTINATION bin)
ENDFUNCTION()

DEFSCRIPT(su ${ABBREV_NAME}-su${DEBUG_SUFFIX})
DEFSCRIPT(sudo ${ABBREV_NAME}-sudo${DEBUG_SUFFIX})
DEFSCRIPT(ssh ${ABBREV_NAME}-ssh${DEBUG_SUFFIX})
DEFSCRIPT(download ${ABBREV_NAME}-download${DEBUG_SUFFIX})
DEFSCRIPT(imgcat ${ABBREV_NAME}-imgcat${DEBUG_SUFFIX})
DEFSCRIPT(imgls ${ABBREV_NAME}-imgls${DEBUG_SUFFIX})
DEFSCRIPT(ctl ${ABBREV_NAME}ctl${DEBUG_SUFFIX})
DEFSCRIPT(setup ${SETUP_NAME})

IF (USE_SYSTEMD)
  DEFSCRIPT(systemd ${SYSTEMD_SETUP_NAME})
ENDIF()
